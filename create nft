// SPDX-License-Identifier: MIT
pragma solidity ^0.8.19;

import "@openzeppelin/contracts/token/ERC721/ERC721.sol";
import "@openzeppelin/contracts/utils/Counters.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract crixxus is ERC721, Ownable {
    using Counters for Counters.Counter;
    Counters.Counter private _tokenIds;

    uint256 public mintPrice = 0.0001 ether;

    
    constructor() ERC721("nftcrixxus", "CRX") Ownable(msg.sender) {}

    
    function mintNFT() public payable returns (uint256) {
        require(msg.value >= mintPrice, "ETH insuffisant pour mint");
        _tokenIds.increment();
        uint256 newId = _tokenIds.current();
        _mint(msg.sender, newId);
        return newId;
    }

   
    function withdraw() public onlyOwner {
        uint256 balance = address(this).balance;
        require(balance > 0, "Rien a retirer");
        payable(owner()).transfer(balance);
    }
}
